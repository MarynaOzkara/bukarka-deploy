{"version":3,"file":"static/js/397.b83ca1fe.chunk.js","mappings":"iNAcA,MAyCA,EAzC2BA,KACzB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAE7B,GAAEK,IAAOC,EAAAA,EAAAA,KAmBf,OAjBAC,EAAAA,EAAAA,YAAU,KACUC,WAChBN,GAAW,GACX,IACE,MAAMO,QAAiBC,EAAAA,EAASC,IAAI,cAADC,OAAeP,IAClDN,EAAQU,EAASI,KACnB,CAAE,MAAOV,GACPW,QAAQX,MAAM,uBAAwBA,GACtCC,EAAS,sBACX,CAAC,QACCF,GAAW,EACb,GAGFa,EAAW,GACV,CAACV,IAEAJ,GAAgBe,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACvBd,GAAca,EAAAA,EAAAA,KAAA,OAAAE,SAAMf,KAGtBa,EAAAA,EAAAA,KAACG,EAAAA,GAAmB,CAAAD,UAClBF,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CAAAF,UACVG,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAJ,SAAA,EACNF,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CAAAL,SAAC,eACPF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAACC,MAAO,CAAEC,eAAgB,UAAWR,SAC9CpB,GAAOkB,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,IAAK7B,KAAWkB,EAAAA,EAAAA,KAAA,OAAAE,SAAK,yBAIxB,C","sources":["pages/BookPage.tsx"],"sourcesContent":["import { IBookItem } from \"components/Book\";\r\nimport Loader from \"components/Loader\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  FlexWrapper,\r\n  PageWrapper,\r\n  StyledCommonWrapper,\r\n  Wrapper,\r\n} from \"styles/CommonStyled\";\r\nimport { instance } from \"../utils/fetchInstance\";\r\nimport { Label } from \"./CommonPages.styled\";\r\nimport { BookCard } from \"components\";\r\n\r\nconst BookPage: React.FC = () => {\r\n  const [book, setBook] = useState<IBookItem>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await instance.get(`/api/books/${id}`);\r\n        setBook(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setError(\"Error fetching data\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <StyledCommonWrapper>\r\n      <PageWrapper>\r\n        <Wrapper>\r\n          <Label>Book page</Label>\r\n          <FlexWrapper style={{ justifyContent: \"center\" }}>\r\n            {book ? <BookCard {...book} /> : <div>No book data</div>}\r\n          </FlexWrapper>\r\n        </Wrapper>\r\n      </PageWrapper>\r\n    </StyledCommonWrapper>\r\n  );\r\n};\r\n\r\nexport default BookPage;\r\n"],"names":["BookPage","book","setBook","useState","loading","setLoading","error","setError","id","useParams","useEffect","async","response","instance","get","concat","data","console","fetchData","_jsx","Loader","children","StyledCommonWrapper","PageWrapper","_jsxs","Wrapper","Label","FlexWrapper","style","justifyContent","BookCard"],"sourceRoot":""}