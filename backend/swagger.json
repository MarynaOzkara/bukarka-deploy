{
  "openapi": "3.0.1",
  "info": {
    "version": "1.1.0",
    "title": "Bukarka backend docs",
    "description": "This is Bukarka - book's online shop REST API documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
	"produces": ["application/json"],
  
  "servers": [
    {
      "url": "http://localhost:4000/api"
    },
    {
      "url": "https://bukarka.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Autorization endpoints"
    },
    {
      "name": "Books",
      "description": "Books endpoints"
    },
    {
      "name": "Profile",
      "description": "User's profile endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags":["Auth"],
        "summary": "User registration",
        "parameters":[],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          } 
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationBadRequestResponse"
                }
              }
            }
          } 
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags":["Auth"],
        "summary": "User login",
        "parameters":[],
        "requestBody":{
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          } 
        },
        "responses": {
          "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginResponse"
              }
            }
          }
          },
          "404": {
            "description": "Not found",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginBadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags":["Auth"],
        "summary": "User logout",
        "parameters":[],
        "security": [{ "Bearer": [] }],
        "requestBody":{},
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Unauthorized",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags":["Auth"],
        "summary": "Get current User's data",
        "parameters":[],
        "security": [{ "Bearer": [] }],
        "requestBody":{},
        "responses": {
          "200": {
            "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentResponse"
              }
            }
          }
          },
          "401": {
            "description": "Unauthorized",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password/forgot": {
      "post": {
        "tags":["Auth"],
        "summary": "Forgot Password",
        "parameters":[],
        "requestBody":{
          "description": "Email object",
          "required": true,
          "content":{
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200":{
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordForgotResponse"
              }
            }
          }
          },
          "404":{
            "description": "Not found",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordForgotErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordForgotBadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password/reset/{resetToken}": {
      "patch": {
        "tags":["Auth"],
        "summary": "Reset Password",
        "parameters":[
          {
            "name": "resetToken",
            "in": "path",
            "description": "Reset token from a letter sent to the user",
            "required": true,
            "schema": {
              "type": "string",
							"example": "9dde53dd433357292123b875f7f5f920838e6351b0a0fb02475b97088141fca6"
            }
          }
        ],
        "requestBody":{
          "description": "Password object",
          "required": true,
          "content":{
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            }
            },
          "404":{
            "description": "Not found",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetBadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get":{
        "tags":["Profile"],
        "summary": "Returns all user's profile data",
        "parameters":[],
        "security": [{ "Bearer": [] }],
        "requestBody":{},
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile/edit": {
      "put": {
        "tags":["Profile"],
        "summary": "Edit profile user's data",
        "parameters":[],
        "security": [{ "Bearer": [] }],
        "requestBody":{
          "description": "Registration's object",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEditRequest"
              }
            }
          } 
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileEditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetBadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile/newsletter": {
      "get": {
        "tags":["Profile"],
        "summary": "Change user's newsletter status",
        "parameters":[],
        "security": [{ "Bearer": [] }],
        "requestBody":{},
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404":{
            "description": "Not found",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile/newsletter/activate/{activateToken}": {
      "get":{
        "tags":["Profile"],
        "summary": "Activate newsletter subscribtion",
        "parameters":[
          {
            "name": "activateToken",
            "in": "path",
            "description": "Activate token from the letter sent to the user",
            "required": true,
            "schema": {
              "type": "string",
							"example": "73e395161832d8e9cfeade6166519065a4ff16845a1e380a05f9450a3e89254c"
            }
          }
        ],
        "requestBody": {},
        "responses": {
          "200":{
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterActivateResponse"
                }
              }
            }
          },
          "404":{
            "description": "Not found",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterErrorResponse"
                }
              }
            }
          },
          "400":{
            "description": "Bad request",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterBadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Returns all books",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Books not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/bestsellers": {
      "get": {
        "tags": ["Books"],
        "summary": "Returns bestseller books",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookListResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Books not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/new": {
      "get": {
        "tags": ["Books"],
        "summary": "Returns new books",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookListResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Books not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/promotions": {
      "get": {
        "tags": ["Books"],
        "summary": "Returns books on promotions",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookListResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Books not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Returns a book by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/books/filters": {
      "get": {
        "tags": ["Books"],
        "summary": "Returns all filtered books",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "minimum": 1
            }  
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1
            } 
          },
          {
            "name": "title",
              "in": "query",
              "description": "Search name of book",
              "schema": {
                "type": "string",
                "example": "Подорож "
              }   
          },
          {
            "name": "category",
              "in": "query",
              "description": "Choose category of book",
              "schema": {
                "type": "string",
                "example": "Дитяча",
                "enum": [
                  "Дитяча",
                  "Художня",
                  "Навчальна",
                  "Наукова",
                  "Подарункові видання",
                  "Іноземними мовами"
                ]
              }   
          },
          {
            "name": "subcategory",
              "in": "query",
              "description": "Choose the subject of book",
              "schema": {
                "type": "string",
                "example": "Казки",
                "enum": [
                  "Казки",
                  "Абетки, лічба",
                  "Бізнес-література",
                  "Енциклопедії",
                  "Есеї",
                  "Вільмебухи",
                  "Розмальовки",
                  "Різдвяні, новорічні",
                  "Романи",
                  "Навчальні, розвивальні",
                  "Вірші",
                  "Про динозаврів",
                  "Про транспорт",
                  "Фентезі та фантастика",
                  "Детективи",
                  "Комікси",
                  "Про релігії",
                  "Про психологію",
                  "Про фізіологію",
                  "Психологія",
                  "Поезія, антології",
                  "Саморозвиток",
                  "Суспільні науки",
                  "Атласи , контурні карти",
                  "Словники",
                  "Навчальні, розвивальні",
                  "Підготовка до уроків"
                ]
              }
          },
          {
            "name": "language",
              "in": "query",
              "description": "Choose language of book",
              "schema": {
                "type": "string",
                "example": "Українська",
                "enum": [
                  "Українська",
                  "Англійська",
                  "Французська",
                  "Німецька"
                ]
              }
          },
          {
            "name": "author",
              "in": "query",
              "description": "Choose author of book",
              "schema": {
                "type": "string",
                "example": "Олена Степаненко",
                "enum": [
                  "Олена Степаненко",
                  "Олексій Петренко",
                  "Наталія Петренко",
                  "Анатолій Мельник",
                  "Михайло Гордієнко",
                  "Сергій Лебідь",
                  "та інші"
                ]
              }
          },
          {
            "name": "publisher",
              "in": "query",
              "description": "Choose publisher of book",
              "schema": {
                "type": "string",
                "example": "Дивосвіт",
                "enum": [
                  "Дивосвіт",
                  "Казкове видавництво",
                  "Ранок",
                  "Інновація",
                  "Літера",
                  "Світанок",
                  "та інші"
                ]
              }
          },
          {
            "name": "priceMin",
              "in": "query",
              "description": "Search books from value of min price",
              "schema": {
                "type": "number",
                "example": 100
              }
          },
          {
            "name": "priceMax",
              "in": "query",
              "description": "Search books to the value of max price",
              "schema": {
                "type": "number",
                "example": 500
              }
          },
          {
            "name": "ratingMin",
              "in": "query",
              "description": "Search books from value of min rating",
              "schema": {
                "type": "number",
                "example": 4
              }
          },
          {
            "name": "ratingMax",
              "in": "query",
              "description": "Search books to the value of max rating",
              "schema": {
                "type": "number",
                "example": 5
              }
          },
          {
            "name": "promotions",
              "in": "query",
              "description": "Search books at promotions",
              "schema": {
                "type": "boolean",
                "default": "false",
                "example": "true"
              } 
          },
          {
            "name": "bestsellers",
              "in": "query",
              "description": "Search bestsellers books",
              "schema": {
                "type": "boolean",
                "default": "false",
                "example": "true"
              }
          },
          {
            "name": "new",
              "in": "query",
              "description": "Search new books",
              "schema": {
                "type": "boolean",
                "default": "false",
                "example": "true"
              }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredBooksListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Books not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{productId}": {
      "post": {
        "summary": "Add one book to cart",
        "tags": ["Orders"],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "description": "book ID to add to cart",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The book has been successfully added to the cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message about successful adding to cart"
                    },
                    "status": {
                      "type": "string",
                      "description": "OK"
                    },
                    "code": {
                      "type": "integer",
                      "description": "Код відповіді"
                    },
                    "bookAdded": {
                      "type": "object",
                      "description": "Book added to cart",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Book ID"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Book quantity"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders with total prices",
        "tags": ["Orders"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Order ID"
                      },
                      "orderItems": {
                        "type": "array",
                        "description": "List of order items",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "Order item ID"
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "Quantity of the item"
                            },
                            "product": {
                              "type": "object",
                              "description": "Product details",
                              "properties": {
                                "_id": {
                                  "type": "string",
                                  "description": "Product ID"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "Product title"
                                },
                                "price": {
                                  "type": "number",
                                  "description": "Product price"
                                }
                              }
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status"
                      },
                      "totalPrice": {
                        "type": "number",
                        "description": "Total price of the order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/orderItems/{orderItemId}": {
      "patch": {
        "summary": "Update book quantity in order",
        "tags": ["Orders"],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "description": "Order ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "orderItemId",
            "required": true,
            "description": "Order item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "New quantity of the book"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book quantity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Updated order item ID"
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "Updated quantity of the book"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "summary": "Get order by ID",
        "tags": ["Orders"],
        "description": "Get order details by order ID.",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "description": "Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request. Returns the order with details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Order ID"
                    },
                    "orderItems": {
                      "type": "array",
                      "description": "List of order items",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Order item ID"
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "Quantity of the item"
                          },
                          "product": {
                            "type": "object",
                            "description": "Product details",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Product ID"
                              },
                              "title": {
                                "type": "string",
                                "description": "Product title"
                              },
                              "price": {
                                "type": "number",
                                "description": "Product price"
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status"
                    },
                    "totalPrice": {
                      "type": "number",
                      "description": "Total price of the order"
                    },
                    "customerInfo": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Customer name"
                        },
                        "surname": {
                          "type": "string",
                          "description": "Customer's last name"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "Customer's email"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "description": "Customer`s phone number"
                        },
                        "city": {
                          "type": "string",
                          "description": "City of delivery"
                        },
                        "comment": {
                          "type": "string",
                          "description": "Comment on the order"
                        }
                      }
                    },
                    "isGuestOrder": {
                      "type": "boolean",
                      "description": "Indicates if the order is placed by a guest user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found. Returns an error message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete order and associated order items",
        "tags": ["Orders"],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "description": "Order ID to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order and associated items deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message about successful deletion"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/orderItems/{orderItemId}": {
      "delete": {
        "summary": "Delete order item",
        "tags": ["Orders"],
        "parameters": [
          {
            "in": "path",
            "name": "orderItemId",
            "required": true,
            "description": "Order item ID to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message about successful deletion"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/checkout/{orderId}": {
      "put": {
        "summary": "submit the order",
        "tags": ["Orders"],
        "description": "submittting the order with specified customer data and changing the status to \"processing\".",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "description": "order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Customer name"
                  },
                  "surname": {
                    "type": "string",
                    "description": "Customer's last name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Customer's email"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Customer`s phone number"
                  },
                  "city": {
                    "type": "string",
                    "description": "City of delivery"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment on the order"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful request. Returns a message about successful order placement and order details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message about successful order placement"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "customerInfo": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Customer name"
                            },
                            "surname": {
                              "type": "string",
                              "description": "Customer's last name"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "Customer's email"
                            },
                            "phoneNumber": {
                              "type": "string",
                              "description": "Customer`s phone number"
                            },
                            "city": {
                              "type": "string",
                              "description": "City of delivery"
                            },
                            "comment": {
                              "type": "string",
                              "description": "Comment on the order"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "Order ID"
                        },
                        "orderItems": {
                          "type": "array",
                          "description": "List of order items",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Order item ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "Quantity of the item"
                              },
                              "product": {
                                "type": "object",
                                "description": "Product details",
                                "properties": {
                                  "_id": {
                                    "type": "string",
                                    "description": "Product ID"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "Product title"
                                  },
                                  "price": {
                                    "type": "number",
                                    "description": "Product price"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "description": "Order status"
                        },
                        "totalPrice": {
                          "type": "number",
                          "description": "Total price of the order"
                        },
                        "isGuestOrder": {
                          "type": "boolean",
                          "description": "Indicates if the order is placed by a guest user"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the order was created"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the order was last updated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Замовлення не знайдено. Повертає повідомлення про помилку.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Повідомлення про помилку"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "surname", "phone", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
						"description": "User's name",
            "pattern": "/^[a-zA-Zа-яА-ЯЇїІіЄєҐґ]*$/",
						"example": "Олена"
          },
          "surname": {
            "type": "string",
						"description": "User's surname",
            "pattern": "/^[a-zA-Zа-яА-ЯЇїІіЄєҐґ]*$/",
						"example": "Шевченко"
          },
          "phone": {
            "type": "string",
						"description": "User's phone",
            "pattern": "/^d{9}$/",
            "minLength": "9",
            "example": "961456789"
          },
          "email": {
            "type": "string",
						"description": "User's email",
						"format": "email",
						"pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/",
            "example": "shevchenko@gmail.com"
          },
          "password": {
            "type": "string",
						"description": "User's password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123!"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "201"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "User registered succesfull"
          },
          "token": {
            "type": "string",
						"required": true,
						"description": "User's authentitication token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZWNiZDBkNWFkZTZmMTdlNWEwNTNjOSIsImlhdCI6MTcxMDAxMzcwOSwiZXhwIjoxNzEwMTAwMTA5fQ.ZPubtr4yCTy01Lh1D8hlp6gzJtJYqKuxBtsnj47GE2w"
          },
          "data":{
            "type": "object",
            "properties": {
              "id": {
                "type":"string",
                "description": "User's ID",
                "example": "65ecbd0d5ade6f17e5a053c9"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Олена"
              },
              "surname":{
                "type": "string",
                "description": "User's surname",
                "example": "Шевченко"
              },
              "email":{
                "type": "string",
                "description": "User's email",
                "example": "shevchenko@gmail.com"
              },
              "phone":{
                "type": "string",
                "description": "User's phone",
                "example": "961456789"
              },
              "role": {
                "type": "string",
                "description": "User permition",
                "example": "customer"
              },
              "subscription": {
                "type": "string",
                "description": "User status",
                "example": "beginner"
              }
            }
          } 
        }
      },
      "RegistrationErrorResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Email has already been registered"
					}
				}
      },
      "RegistrationBadRequestResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Bad request (invalid request body)"
					}
				}
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
						"description": "User's email",
						"format": "email",
						"pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/",
            "example": "shevchenko@gmail.com"
          },
          "password": {
            "type": "string",
						"description": "User's password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123!"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Login successfull"
          },
          "token": {
            "type": "string",
						"required": true,
						"description": "User's authentitication token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZWNiZDBkNWFkZTZmMTdlNWEwNTNjOSIsImlhdCI6MTcxMDAxNDU0NCwiZXhwIjoxNzEwMTAwOTQ0fQ.A2gEKlIpSBm52XuAuYMCnPH8x7ElPGSNlFI1ZY7Iz7M"
          },
          "data":{
            "type": "object",
            "properties": {
              "id": {
                "type":"string",
                "description": "User's ID",
                "example": "65ecbd0d5ade6f17e5a053c9"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Олена"
              },
              "surname":{
                "type": "string",
                "description": "User's surname",
                "example": "Шевченко"
              },
              "email":{
                "type": "string",
                "description": "User's email",
                "example": "shevchenko@gmail.com"
              },
              "phone":{
                "type": "string",
                "description": "User's phone",
                "example": "961456789"
              },
              "role": {
                "type": "string",
                "description": "User permition",
                "example": "customer"
              },
              "subscription": {
                "type": "string",
                "description": "User status",
                "example": "beginner"
              }
            }
          } 
        }
      },
      "LoginErrorResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "User does not exist"
					}
				}
      },
      "LoginBadRequestResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Please fill in all required fields"
					}
				}
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "data":{
            "type": "object",
            "properties": {
              "id": {
                "type":"string",
                "description": "User's ID",
                "example": "65ecbd0d5ade6f17e5a053c9"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Олена"
              },
              "surname":{
                "type": "string",
                "description": "User's surname",
                "example": "Шевченко"
              },
              "email":{
                "type": "string",
                "description": "User's email",
                "example": "shevchenko@gmail.com"
              },
              "phone":{
                "type": "string",
                "description": "User's phone",
                "example": "961456789"
              },
              "role": {
                "type": "string",
                "description": "User permition",
                "example": "customer"
              },
              "subscription": {
                "type": "string",
                "description": "User status",
                "example": "beginner"
              }
            }
          } 
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Unauthorized User"
					}
				}
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties":{
          "email":{
            "type": "string",
						"description": "User's email",
						"format": "email",
						"pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/",
            "example": "shevchenko@gmail.com"
          }
        }
      },
      "PasswordForgotResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Reset password instruction was sent to your email: shevchenko@gmail.com!"
					}
				}
      },
      "PasswordForgotErrorResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "User does not exist"
					}
				}
      },
      "PasswordForgotBadRequestResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Bad request"
					}
				}
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": ["password", "confirmPassword"],
        "properties":{
          "password": {
            "type": "string",
						"description": "New password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123!"
          },
          "confirmPassword": {
            "type": "string",
						"description": "Confirm password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123!"
          }
        }
      },
      "PasswordResetResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Password reset success"
					}
				}
      },
      "PasswordResetErrorResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "User not found"
					}
				}
      },
      "PasswordResetBadRequestResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Password does not match"
					}
				}
      },
      "ProfileResponse": {
        "type": "object",
        "properties": {
          "owner":{
            "type": "object",
            "properties": {
              "id": {
                "type":"string",
                "description": "User's ID",
                "example": "65feffc9107a46cdc7d24a48"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Олена"
              },
              "surname":{
                "type": "string",
                "description": "User's surname",
                "example": "Шевченко"
              },
              "phone":{
                "type": "string",
                "description": "User's phone",
                "example": "961456789"
              },
              "email":{
                "type": "string",
                "description": "User's email",
                "example": "shevchenko@gmail.com"
              },
              "subscription": {
                "type": "string",
                "description": "User status",
                "example": "beginner"
              },
              "birthDay": {
                "type": "string",
                "description": "User permition",
                "example": "29.03.1985"
              }
            }
          },
          "newsletter": {
            "type": "boolean",
            "description": "User newsletter status",
            "example": "false"
          } 
        }
      },
      "ProfileEditRequest": {
        "type": "object",
        "required": ["name", "surname", "phone", "email", "birthDay", "oldPassword", "newPassword", "confirmNewPassword"],
        "properties": {
          "name": {
            "type": "string",
						"description": "User's name",
            "pattern": "/^[a-zA-Zа-яА-ЯЇїІіЄєҐґ]*$/",
						"example": "Ірина"
          },
          "surname": {
            "type": "string",
						"description": "User's surname",
            "pattern": "/^[a-zA-Zа-яА-ЯЇїІіЄєҐґ]*$/",
						"example": "Шевченко"
          },
          "phone": {
            "type": "string",
						"description": "User's phone",
            "pattern": "/^d{9}$/",
            "minLength": "9",
            "example": "961556789"
          },
          "email": {
            "type": "string",
						"description": "User's email",
						"format": "email",
						"pattern": "/^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}$/",
            "example": "cikove6410@glaslack.com"
          },
          "birthDay":{
            "type": "integer",
            "description": "User's birth day",
            "example": "03.29.1985"
          },
          "oldPassword": {
            "type": "string",
						"description": "User's password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123!"
          },
          "newPassword": {
            "type": "string",
						"description": "User's password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123$"
          },
          "confirmNewPassword": {
            "type": "string",
						"description": "User's password",
						"minLength": "8",
						"maxLength": "16",
            "pattern": "/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!#$%*()_]).{8,}$/",
						"example": "Qwerty123$"
          }
        }
      },
      "ProfileEditResponse": {
        "type": "object",
        "properties": {
          "owner":{
            "type": "object",
            "properties": {
              "id": {
                "type":"string",
                "description": "User's ID",
                "example": "65feffc9107a46cdc7d24a48"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Ірина"
              },
              "surname":{
                "type": "string",
                "description": "User's surname",
                "example": "Шевченко"
              },
              "phone":{
                "type": "string",
                "description": "User's phone",
                "example": "961556789"
              },
              "email":{
                "type": "string",
                "description": "User's email",
                "example": "cikove6410@glaslack.com"
              },
              "subscription": {
                "type": "string",
                "description": "User status",
                "example": "beginner"
              },
              "birthDay": {
                "type": "string",
                "description": "User permition",
                "example": "29.03.1985"
              }
            }
          },
          "newsletter": {
            "type": "boolean",
            "description": "User newsletter status",
            "example": "false"
          } 
        }
      },
      "NewsletterResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Newslatter activation instruction was sent to your email: cikove6410@glaslack.com!"
					}
				}
      },
      "NewsletterErrorResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "User not found"
					}
				}
      },
      "NewsletterActivateResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Newsletter activate success"
					}
				}
      },
      "NewsletterBadRequestResponse": {
        "type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "Your newsletter subscription already activated"
					}
				}
      },
      "BookResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Book ID",
            "example": "65e5c6238360afb1e50ffe59"
          },
          "author": {
            "type": "string",
            "description": "Book's author",
            "example": "Марія Коваль"
          },
          "title": {
            "type": "string",
            "description": "Book's title",
            "example": "Казки для дітей"
          },
          "language": {
            "type": "string",
            "description": "Language",
            "example": "українська"
          },
          "publisher": {
            "type": "string",
            "description": "Publisher",
            "example": "Казкове видавництво"
          },
          "price": {
            "type": "number",
            "description": "Book's price",
            "example": 120
          },
          "rating": {
            "type": "number",
            "description": "Rating",
            "example": 4.5
          },
          "category": {
            "type": "string",
            "description": "Book's category",
            "example": "Дитяча"
          },
          "subcategory": {
            "type": "string",
            "description": "Book's subcategory",
            "example": "Казки"
          },
          "age": {
            "type": "string",
            "description": "Recommended age",
            "example": "4 - 6"
          },
          "format": {
            "type": "string",
            "description": "Format",
            "example": "205 х 260 мм"
          },
          "cover": {
            "type": "string",
            "description": "Book's cover",
            "example": "Тверда"
          },
          "pages": {
            "type": "number",
            "description": "Number of book's pages",
            "example": 150
          },
          "year": {
            "type": "string",
            "description": "Year of publication",
            "example": "2020"
          },
          "new": {
            "type": "boolean",
            "description": "State",
            "example": true
          },
          "promotions": {
            "type": "boolean",
            "description": "Promotions",
            "example": true
          },
          "bestsellers": {
            "type": "boolean",
            "description": "Bestsellers",
            "example": true
          },
          "description": {
            "type": "string",
            "description": "Book's description",
            "example": "У захопливій збірці 'Казки для дітей' від відомої української письменниці Марії Коваль вас чекає безліч чарівних пригод та захоплюючих історій. Ці казки сповнені магії, навчальних моментів та добрих уроків, які залишать незабутнє враження у кожного маленького читача. Давайте разом відправимося у світ фантастичних пригод та відкриємо для себе нові історії!"
          }
        }
      },
      "BookListResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 40927
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "example": 12
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookResponse"
            }
          }
        }
      },
      "FilteredBooksListResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 2
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "limit": {
            "type": "number",
            "example": 12
          },
          "books": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Book ID",
                "example": "65ed9f233000741d129b5557"
              },
              "author": {
                "type": "string",
                "description": "Book's author",
                "example": "Олена Степаненко"
              },
              "title": {
                "type": "string",
                "description": "Book's title",
                "example": "Подорож на планету Марс"
              },
              "language": {
                "type": "string",
                "description": "Language",
                "example": "українська"
              },
              "publisher": {
                "type": "string",
                "description": "Publisher",
                "example": "Дивосвіт"
              },
              "price": {
                "type": "number",
                "description": "Book's price",
                "example": 100
              },
              "rating": {
                "type": "number",
                "description": "Rating",
                "example": 4.6
              },
              "category": {
                "type": "string",
                "description": "Book's category",
                "example": "Дитяча"
              },
              "subcategory": {
                "type": "string",
                "description": "Book's subcategory",
                "example": "Фентезі та фантастика"
              },
              "age": {
                "type": "string",
                "description": "Recommended age",
                "example": "9 - 12"
              },
              "genre": {
                "type":"array",
                "example": ["Дитяча", "Фентезі", "Фантастика"]
              },
              "format": {
                "type": "string",
                "description": "Format",
                "example": "205 х 260 мм"
              },
              "cover": {
                "type": "string",
                "description": "Book's cover",
                "example": "Тверда"
              },
              "pages": {
                "type": "number",
                "description": "Number of book's pages",
                "example": 120
              },
              "new": {
                "type": "boolean",
                "description": "State",
                "example": false
              },
              "promotions": {
                "type": "boolean",
                "description": "Promotions",
                "example": false
              },
              "bestsellers": {
                "type": "boolean",
                "description": "Bestsellers",
                "example": false
              },
              "year": {
                "type": "string",
                "description": "Year of publication",
                "example": "2020"
              },
              "description": {
                "type": "string",
                "description": "Book's description",
                "example": "Захоплива пригода про маленьких друзів, які вирушають у захопливу подорож у невідомість космосу на загадкову планету Марс. Це захопливе фантастичне оповідання, яке привабить читачів усіх вікових категорій своєю цікавою історією та несподіваними обертами подій."
              }
            }
          }
      },
      "CategoryResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Category ID",
            "example": "65e5c6238360afb1e50ffe59"
          },
          "title": {
            "type": "string",
            "description": "Category title",
            "example": "Fiction"
          },
          "order": {
            "type": "number",
            "description": "Category order",
            "example": 1
          },
          "subcategories": {
            "type": "array",
            "description": "Subcategories",
            "items": {
              "type": "string"
            },
            "example": [
              "subcategory1",
              "subcategory1"
            ]
          }
        }
      },
      "CategoryListResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "description": "List of categories",
            "items": {
              "$ref": "#/components/schemas/CategoryResponse"
            }
          }
        }
      },
      "errorNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Books not found"
          }
        }
      }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
  } 
}
}